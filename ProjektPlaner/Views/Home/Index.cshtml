@model List<DateTime>

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8">
    <title>Kalendarz - Obecny Miesiąc</title>
    <link href="#" rel="stylesheet" />
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ccc;
            padding: 10px;
            text-align: center;
        }
        th {
            background-color: #f8f8f8;
        }
        .weekend {
            background-color: #f0f0f0;
            color: #a00;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <header class="mb-4">
            <h1 class="text-center">Kalendarz na @(Model?.FirstOrDefault().ToString("MMMM yyyy") ?? "nieznany miesiąc")</h1>
        </header>

        <main>
            <table>
                <thead>
                    <tr>
                        <th>Pon</th>
                        <th>Wt</th>
                        <th>Śr</th>
                        <th>Czw</th>
                        <th>Pt</th>
                        <th class="weekend">Sob</th>
                        <th class="weekend">Nd</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model == null || !Model.Any())
                    {
                        <tr>
                            <td colspan="7">Brak danych do wyświetlenia.</td>
                        </tr>
                    }
                    else
                    {
                        var days = Model;
                        int currentDayOfWeek = (int)days[0].DayOfWeek;

                        // Adjust for Monday as the first day of the week
                        currentDayOfWeek = currentDayOfWeek == 0 ? 6 : currentDayOfWeek - 1;

                        int dayIndex = 0;

                        // Fill first week
                        <tr>
                            @for (int i = 0; i < currentDayOfWeek; i++)
                            {
                                <td></td>
                            }

                            @while (dayIndex < days.Count && currentDayOfWeek < 7)
                            {
                                var day = days[dayIndex];
                                var isWeekend = day.DayOfWeek == DayOfWeek.Saturday || day.DayOfWeek == DayOfWeek.Sunday;
                                <td class="@(isWeekend ? "weekend" : "")">@day.Day</td>
                                dayIndex++;
                                currentDayOfWeek++;
                            }
                        </tr>

                        // Fill remaining weeks
                        while (dayIndex < days.Count)
                        {
                            <tr>
                                @for (int i = 0; i < 7; i++)
                                {
                                    if (dayIndex < days.Count)
                                    {
                                        var day = days[dayIndex];
                                        var isWeekend = day.DayOfWeek == DayOfWeek.Saturday || day.DayOfWeek == DayOfWeek.Sunday;
                                        <td class="@(isWeekend ? "weekend" : "")">@day.Day</td>
                                        dayIndex++;
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </main>

        <footer class="mt-5 text-center">
            <p>&copy; 2024 Planer. Wszystkie prawa zastrzeżone.</p>
        </footer>
    </div>
</body>
</html>

@model List<DateTime>
@{
    // Pobierz listę świąt z ViewData
    var holidays = ViewData["Holidays"] as List<DateTime> ?? new List<DateTime>();
}

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8">
    <title>Kalendarz - Obecny Miesiąc</title>
    <link href="#" rel="stylesheet" />
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ccc;
            padding: 10px;
            text-align: center;
        }
        th {
            background-color: #f8f8f8;
        }
        .weekend {
            background-color: #f0f0f0;
            color: #a00;
        }
        .holiday {
            background-color: #ffeeba;
            color: #d9534f;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <header class="mb-4">
            <h1 class="text-center">Kalendarz na @DateTime.Now.ToString("MMMM yyyy")</h1>
        </header>

        <main>
            <table>
                <thead>
                    <tr>
                        <th>Pon</th>
                        <th>Wt</th>
                        <th>Śr</th>
                        <th>Czw</th>
                        <th>Pt</th>
                        <th class="weekend">Sob</th>
                        <th class="weekend">Nd</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int currentDayOfWeek = (int)Model[0].DayOfWeek;
                        currentDayOfWeek = currentDayOfWeek == 0 ? 6 : currentDayOfWeek - 1;
                        int dayIndex = 0;

                        // Pierwszy tydzień
                        <tr>
                            @for (int i = 0; i < currentDayOfWeek; i++)
                            {
                                <td></td>
                            }

                            @while (dayIndex < Model.Count && currentDayOfWeek < 7)
                            {
                                var day = Model[dayIndex];
                                var isWeekend = day.DayOfWeek == DayOfWeek.Saturday || day.DayOfWeek == DayOfWeek.Sunday;
                                var isHoliday = holidays.Contains(day);

                                <td class="@(isHoliday ? "holiday" : (isWeekend ? "weekend" : ""))">
                                    @day.Day
                                </td>
                                dayIndex++;
                                currentDayOfWeek++;
                            }
                        </tr>

                        // Pozostałe tygodnie
                        while (dayIndex < Model.Count)
                        {
                            <tr>
                                @for (int i = 0; i < 7; i++)
                                {
                                    if (dayIndex < Model.Count)
                                    {
                                        var day = Model[dayIndex];
                                        var isWeekend = day.DayOfWeek == DayOfWeek.Saturday || day.DayOfWeek == DayOfWeek.Sunday;
                                        var isHoliday = holidays.Contains(day);

                                        <td class="@(isHoliday ? "holiday" : (isWeekend ? "weekend" : ""))">
                                            @day.Day
                                        </td>
                                        dayIndex++;
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </main>

        <footer class="mt-5 text-center">
            <p>&copy; 2024 Planer. Wszystkie prawa zastrzeżone.</p>
        </footer>
    </div>
</body>
</html>
